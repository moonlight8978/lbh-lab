---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argocd-vault
  namespace: argocd

---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/external-secrets.io/secretstore_v1.json
apiVersion: external-secrets.io/v1
kind: SecretStore
metadata:
  name: argocd
  namespace: argocd
spec:
  provider:
    vault:
      server: http://vault.vault:8200
      path: secret
      version: "v2"
      auth:
        kubernetes:
          mountPath: kubernetes
          role: argocd
          serviceAccountRef:
            name: argocd-vault

---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: argocd-notifications-secret
  namespace: argocd
spec:
  secretStoreRef:
    name: argocd
    kind: SecretStore
  target:
    creationPolicy: Owner
    deletionPolicy: Retain
  refreshPolicy: Periodic
  refreshInterval: 1h
  data:
    - remoteRef:
        key: &key prod/argocd
        property: noti-github-app-id
      secretKey: githubAppId
    - remoteRef:
        key: *key
        property: noti-github-app-id
      secretKey: githubInstallationId
    - remoteRef:
        key: *key
        property: noti-github-private-key
      secretKey: githubPrivateKey
    - remoteRef:
        key: *key
        property: noti-telegram-token
      secretKey: telegramToken

---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: argocd-secret
  namespace: argocd
spec:
  secretStoreRef:
    name: argocd
    kind: SecretStore
  target:
    creationPolicy: Merge
    deletionPolicy: Retain
  refreshPolicy: Periodic
  refreshInterval: 1h
  data:
    - remoteRef:
        key: &key prod/argocd
        property: admin-password
      secretKey: admin.password
