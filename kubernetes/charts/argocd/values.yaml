---
# https://github.com/argoproj/argo-helm/blob/main/charts/argo-cd/values.yaml

global:
  domain: argocd-10-242-20-170.lab-local.bichls.dev
  # Remove when v3.2.0 becomes stable
  image:
    repository: quay.io/argoproj/argocd
    tag: v3.2.0-rc4

redis-ha:
  enabled: true

  replicas: 2

  redis:
    resources:
      requests:
        memory: 64Mi
        cpu: 50m
      limits:
        memory: 500Mi

  haproxy:
    IPv6:
      enabled: false

    replicas: 2

    resources:
      requests:
        memory: 64Mi
        cpu: 50m

    affinity: |
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app: {{ template "redis-ha.name" . }}-haproxy
                release: {{ .Release.Name }}
            topologyKey: kubernetes.io/hostname
            matchLabelKeys:
            - pod-template-hash

    metrics:
      serviceMonitor:
        enabled: true

controller:
  replicas: 1

  resources:
    requests:
      cpu: 10m
      memory: 64Mi

server:
  replicas: 1

  deploymentAnnotations:
    reloader.stakater.com/auto: "true"

  resources:
    requests:
      cpu: 100m
      memory: 256Mi

  service:
    type: LoadBalancer
    annotations:
      lbipam.cilium.io/ips: 10.242.20.181

repoServer:
  replicas: 1

  env:
    - name: ARGOCD_EXEC_TIMEOUT
      value: "5m"

  resources:
    requests:
      cpu: 10m
      memory: 64Mi

dex:
  deploymentAnnotations:
    reloader.stakater.com/auto: "true"

  resources:
    requests:
      cpu: 10m
      memory: 32Mi

configs:
  cm:
    admin.enabled: true
    application.instanceLabelKey: argocd.argoproj.io/instance
    kustomize.enabled: true
    kustomize.buildOptions: --enable-helm --load-restrictor LoadRestrictionsNone
    # https://docs.cilium.io/en/latest/configuration/argocd-issues/
    resource.exclusions: |
      - apiGroups:
          - cilium.io
        kinds:
          - CiliumIdentity
        clusters:
          - "*"
    resource.customizations.ignoreDifferences.monitoring.coreos.com_ServiceMonitor: |
      jqPathExpressions:
      - '.spec.endpoints[].relabelings[].action'
    resource.customizations.ignoreDifferences.v1_Secret: |
      jsonPointers:
      - '/metadata/annotations/argocd.argoproj.io~1tracking-id'
    dex.config: |
      connectors:
        - type: oidc
          id: oidc
          name: OIDC
          config:
            issuer: $argocd-config:dex.oidc.issuer
            clientID: $argocd-config:dex.oidc.clientID
            clientSecret: $argocd-config:dex.oidc.clientSecret
            insecureSkipEmailVerified: true

  params:
    create: true
    controller.diff.server.side: true
    server.insecure: true
    applicationsetcontroller.enable.progressive.syncs: true

  rbac:
    create: false

notifications:
  enabled: true
  secret:
    create: false
  notifiers:
    service.github: |
      appID: $githubAppId
      installationID: $githubInstallationId
      privateKey: $githubPrivateKey
    service.telegram: |
      token: $telegramToken
  triggers:
    trigger.on-deployed: |
      - description: Application is synced and healthy. Triggered once per commit.
        oncePer: app.status.sync.revision
        send:
        - app-deployed
        when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status == 'Healthy'
  templates:
    template.app-deployed: |
      message: |
        Application {{.app.metadata.name}} is now running new version of deployments manifests.
      github:
        repoURLPath: "{{(index .app.spec.sources 0).repoURL}}"
        revisionPath: "{{index .app.status.sync.revisions 0}}"
        status:
          state: success
          label: "continuous-delivery/{{.app.metadata.name}}"
          targetURL: "{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true"
        deployment:
          state: success
          environment: production
          logURL: "{{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true"
          requiredContexts: []
          autoMerge: true
          transientEnvironment: false
