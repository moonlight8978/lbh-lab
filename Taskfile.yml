---
version: "3"

vars:
  WORKERS: [worker-1, worker-2, worker-3]

tasks:
  tf:stack:
    vars: &tf_vars
      workdir: "{{index .CLI_ARGS_LIST 0}}"
      args: '{{slice .CLI_ARGS_LIST 1 | join " "}}'
    dir: "{{.workdir}}"
    cmd: terragrunt stack {{ternary "" "run" (hasPrefix "output" .args)}} {{.args}} --non-interactive --auth-provider-cmd "sops decrypt {{.ROOT_DIR}}/secrets.yml --output-type json"

  tf:unit:
    vars: *tf_vars
    dir: "{{.workdir}}"
    cmd: terragrunt {{.args}} --auth-provider-cmd "sops decrypt {{.ROOT_DIR}}/secrets.yml --output-type json" --all --non-interactive

  sops:dec:
    cmds:
      - sops decrypt secrets.yml > secrets.dec.yml

  sops:enc:
    cmds:
      - sops encrypt secrets.dec.yml > secrets.yml

  talos:secrets:
    cmds:
      - task: sops:dec
      - talosctl gen secrets -o talos-secrets.dec.yml --force
      - |
        cat talos-secrets.dec.yml | yq eval '{ "talos": . }' > /tmp/talos-secrets.dec.yml
      - defer: rm -rf /tmp/secrets.yml /tmp/talos-secrets.yml
      - |
        yq eval-all '. as $item ireduce ({}; . * $item )' /tmp/talos-secrets.yml /tmp/secrets.yml | sops encrypt --input-type yaml --output-type yaml --filename-override secrets.dec.yml > secrets.yml

  talos:config:
    dir: "kubernetes/talos"
    cmds:
      - sops decrypt {{.ROOT_DIR}}/secrets.yml | yq -r '.talos' | talosctl gen config --with-secrets /dev/stdin lbhlab https://10.242.20.160:6443 --config-patch @patch.yaml {{.CLI_ARGS}}
      - talosctl --talosconfig=./talosconfig config endpoints 10.242.20.161
      - talosctl --talosconfig=./talosconfig kubeconfig --nodes 10.242.20.161

  talos:reset:
    vars:
      IP: "{{ index .CLI_ARGS_LIST 0 }}"
    dir: kubernetes/talos
    cmd: talosctl reset --nodes {{.IP}} --talosconfig talosconfig --system-labels-to-wipe STATE --system-labels-to-wipe EPHEMERAL

  # controlplane or worker
  talos:apply:*:
    vars:
      ROLE: "{{ index .MATCH 0 }}"
      MACHINE: "{{ index .CLI_ARGS_LIST 0 }}"
      IP: "{{ index .CLI_ARGS_LIST 1 }}"
      ARGS: '{{slice .CLI_ARGS_LIST 2 | join " "}}'
    dir: kubernetes/talos
    cmds:
      - talosctl machineconfig patch {{.ROLE}}.yaml -p @patch.yaml -p @nodes/{{.MACHINE}}.yaml | talosctl apply-config --file /dev/stdin --nodes {{.IP}} {{.ARGS}}

  talos:reboot:
    vars:
      IP: "{{ index .CLI_ARGS_LIST 0 }}"
    dir: kubernetes/talos
    cmds:
      - talosctl reboot --nodes {{.IP}} --talosconfig talosconfig

  talos:bootstrap:
    dir: kubernetes/talos
    cmds:
      - task: talos:apply:controlplane
        vars:
          CLI_ARGS_LIST: [control-1, 10.242.20.161, --insecure]
      - task: talos:apply:controlplane
        vars:
          CLI_ARGS_LIST: [control-2, 10.242.20.162, --insecure]
      - task: talos:apply:controlplane
        vars:
          CLI_ARGS_LIST: [control-3, 10.242.20.163, --insecure]
      - task: talos:apply:worker
        vars:
          CLI_ARGS_LIST:
            [worker-1, 10.242.20.171, --insecure -p @nodes/storage.yaml]
      - task: talos:apply:worker
        vars:
          CLI_ARGS_LIST:
            [worker-2, 10.242.20.172, --insecure -p @nodes/storage.yaml]
      - task: talos:apply:worker
        vars:
          CLI_ARGS_LIST:
            [worker-3, 10.242.20.173, --insecure -p @nodes/storage.yaml]
      - sleep 10
      - talosctl bootstrap --talosconfig talosconfig --nodes 10.242.20.161
      - talosctl kubeconfig --talosconfig talosconfig --nodes 10.242.20.161
      - yq -i '.clusters[0].cluster.server = "https://10.242.20.161:6443"' kubeconfig

  talosctl:
    dir: kubernetes/talos
    cmds:
      - talosctl --talosconfig=./talosconfig --nodes {{.CLI_ARGS}}

  k8s:nodelabel:
    env:
      KUBECONFIG: "{{.ROOT_DIR}}/kubernetes/talos/kubeconfig"
    cmds:
      - for: { var: WORKERS }
        cmd: kubectl label node {{.ITEM}} node-role.kubernetes.io/worker=worker
      - for: { var: WORKERS }
        cmd: kubectl label node {{.ITEM}} node-role.kubernetes.io/openebs=openebs

  k8s:bootstrap:
    dir: kubernetes/charts
    cmds:
      - helmfile sync --wait --hide-notes
    env:
      KUBECONFIG: "{{.ROOT_DIR}}/kubernetes/talos/kubeconfig"

  argocd:login:
    env:
      KUBECONFIG: "{{.ROOT_DIR}}/kubernetes/talos/kubeconfig"
    cmds:
      - |
        PASSWORD=$(kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath='{.data.password}' | base64 -d)
        argocd login 10.242.20.181 --username admin --password $PASSWORD --insecure

  argocd:bootstrap:
    cmds:
      - task: argocd:login
      - for: [core, system]
        cmd: argocd app sync --project {{.ITEM}}

  bootstrap:
    cmds:
      - task: tf:unit
        vars:
          workdir: prod/kubernetes
          args: apply
      # TODO: wait for machines
      - task: talos:bootstrap
      # TODO: wait for nodes to be ready
      - task: k8s:nodelabel
      - task: k8s:bootstrap
      - task: argocd:bootstrap

  secret:update:
    cmds:
      - task: sops:enc
      - task: tf:unit
        vars:
          CLI_ARGS_LIST: [prod/bitwarden, apply]

  schema:
    cmds:
      - kss sync --auth-method kubeconfig --kubeconfig kubernetes/talos/kubeconfig --destination dist
