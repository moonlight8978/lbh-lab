# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

tasks:
  provision:
    cmds:
      - just terragrunt apply prod/kubernetes --all --non-interactive
    env:
      TF_VAR_kube_bootstrap: "true"

  bootstrap-apps:
    dir: charts
    cmds:
      - helmfile apply --skip-diff-on-install --suppress-diff
    env:
      KUBECONFIG: $HOME/.kube/lbhlab.yaml

  init-vault:
    env:
      KUBECONFIG: $HOME/.kube/lbhlab.yaml
    cmds:
      - |
        set -eu
        until kubectl wait pod vault-0 -n vault --timeout=10m --for=condition=Ready; do sleep 5; done
        INITIALIZED=$(kubectl -n vault exec --quiet -it vault-0 -- vault status | grep Initialized | awk '{print $2}' | tr -d '\n\r')
        echo "Initialized: '$INITIALIZED'"
        echo "Length: ${#INITIALIZED}"
        if [ "$INITIALIZED" = "false" ]; then
          kubectl -n vault exec --quiet -it vault-0 -- vault operator init -format=yaml > tmp/vault-keys.yml

          for i in {0..2}; do
            kubectl -n vault exec --quiet -it vault-0 -- vault operator unseal $(yq -r ".unseal_keys_b64[$i]" tmp/vault-keys.yml | tr -d '\n\r')
          done
        else
          echo "Vault is already initialized"
        fi

      - for: ["vault-1", "vault-2"]
        cmd: |
          set -eu
          until kubectl wait pod {{.ITEM}} -n vault --timeout=10m --for=condition=Ready; do sleep 5; done
          kubectl -n vault exec --quiet -it {{.ITEM}} -- vault operator raft join http://vault-0.vault-internal:8200
          for i in {0..2}; do
            kubectl -n vault exec --quiet -it {{.ITEM}} -- vault operator unseal $(yq -r ".unseal_keys_b64[$i]" tmp/vault-keys.yml | tr -d '\n\r')
          done

      # Merge current secrets with vault keys
      - |
        yq eval '{ "vault": . }' tmp/vault-keys.yml > tmp/secrets-vault.yml
        yq eval-all '. as $item ireduce ({}; . * $item )' tmp/secrets.yml tmp/secrets-vault.yml | sops encrypt --input-type yaml --output-type yaml --filename-override secrets.dec.yml > secrets.yml
