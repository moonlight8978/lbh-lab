---
- name: Setup xray as transparent proxy
  hosts: xray
  become: true
  tags:
    - tproxy
  roles:
    - ../roles/pkg-latest
    - ../roles/xray
  vars:
    xray_update_geoip: false
    xray_config: |
      {
        "log": {
          "loglevel": "warning"
        },
        "inbounds": [
          {
            "listen": "127.0.0.1",
            "tag": "all-in",
            "port": 12345,
            "protocol": "dokodemo-door",
            "settings": {
              "network": "tcp,udp",
              "followRedirect": true
            },
            "sniffing": {
              "enabled": true,
              "destOverride": ["http", "tls"]
            },
            "streamSettings": {
              "sockopt": {
                "tproxy": "tproxy"
              }
            }
          },
          {
            "port": 10808,
            "protocol": "socks",
            "sniffing": {
              "enabled": true,
              "destOverride": ["http", "tls", "quic"]
            },
            "settings": {
              "auth": "noauth",
              "udp": true
            }
          }
        ],
        "outbounds": [
          {
            "tag": "direct",
            "protocol": "freedom",
            "settings": {
              "domainStrategy": "UseIPv4"
            },
            "streamSettings": {
              "sockopt": {
                "mark": 2
              }
            }
          },
          {
            "tag": "dns-out",
            "protocol": "dns",
            "streamSettings": {
              "sockopt": {
                "mark": 2
              }
            }
          },
          {
            "tag": "warp",
            "protocol": "socks",
            "settings": {
              "servers": [
                {
                  "address": "10.242.20.141",
                  "port": 1080
                }
              ]
            },
            "streamSettings": {
              "sockopt": {
                "mark": 2
              }
            }
          }
        ],
        "dns": {
          "servers": [
            "https://1.1.1.1/dns-query",
            "https://8.8.8.8/dns-query"
          ]
        },
        "routing": {
          "domainStrategy": "AsIs",
          "rules": [
            {
              "type": "field",
              "inboundTag": ["all-in"],
              "port": 123,
              "network": "udp",
              "outboundTag": "direct"
            },
            {
              "type": "field",
              "inboundTag": ["all-in"],
              "port": 53,
              "outboundTag": "dns-out"
            },
            {
              "type": "field",
              "ip": ["8.8.8.8", "1.1.1.1"],
              "outboundTag": "warp"
            },
            {
              "type": "field",
              "domain": ["geosite:github", "geosite:aws"],
              "outboundTag": "warp"
            },
            {
              "type": "field",
              "ip": ["geoip:private"],
              "outboundTag": "direct"
            }
          ]
        }
      }

- name: Setup warp
  hosts: warp
  become: true
  tags:
    - tproxy
  pre_tasks:
    - name: Get secrets
      community.sops.load_vars:
        file: ../../secrets.yml
        expressions: ignore
      register: secrets
    - set_fact:
        cloudflare_warp_license_key: "{{ secrets.ansible_facts.cloudflare_warp_license }}"
  roles:
    - ../roles/pkg-latest
    - ../roles/docker-engine
    - ../roles/docker/cloudflare-warp

- name: Setup wgeasy
  hosts: warp
  become: true
  tags:
    - vpn
  vars:
    wg_host: "10.242.20.141"
  pre_tasks:
    - name: Get secrets
      community.sops.load_vars:
        file: ../../secrets.yml
        expressions: ignore
      register: secrets
    - set_fact:
        wg_admin_username: "{{ secrets.ansible_facts.wg_admin_username }}"
        wg_admin_password: "{{ secrets.ansible_facts.wg_admin_password }}"
  roles:
    - ../roles/docker/wgeasy
